# Docker Engine version 18.06.0+
# Network name requires v3.5+
version: "3.7"
services:
  initdb:
    build: 
      context: ./dkr
      args:
        - POSTGRES_USER=$POSTGRES_USER
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_DB=$POSTGRES_DB
    image: $POSTGRES_IMAGE
    container_name: $POSTGRES_INIT_CONTAINER
    environment:
      - TZ=$TIMEZONE
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
       - ./$DATA_DIR/$POSTGRES_DB:/temp/main
    command: bash -c "/entrypoint.sh init"
    hostname: initdb
    networks:
      - hivenet
  postgres:
    build: 
      context: ./dkr
      args:
        - POSTGRES_USER=$POSTGRES_USER
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_DB=$POSTGRES_DB
    image: $POSTGRES_IMAGE
    container_name: $POSTGRES_CONTAINER
    environment:
      - TZ=$TIMEZONE
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    hostname: postgres
    networks:
      - hivenet
    ports:
      - $POSTGRES_PORT:5432
    volumes:
       - ./$DATA_DIR/$POSTGRES_DB:/var/lib/postgresql/10/main
       - ./dump:/tmp
       - ./confpg/:/etc/postgresql/
    # loop workaround to avoid a race condition
    command: >
      bash -c "
        while ping -c1 $POSTGRES_INIT_CONTAINER &>/dev/null
        do
          echo -e \"\e[0;35mWaiting for $POSTGRES_INIT_CONTAINER to finish\e[0m\"
          sleep 1
        done
        /entrypoint.sh run
      "
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "1"
    restart: always
  hivemind:
    image: $HIVEMIND_IMAGE
    container_name: $HIVEMIND_CONTAINER
    environment:
      - TZ=$TIMEZONE
      - DATABASE_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_URL/$POSTGRES_DB
      - STEEMD_URL={"default":"$RPC"}
      - SYNC_SERVICE=1
      #- BLACKLIST_API_URL=$BLACKLIST_API_URL
      #- MUTED_ACCOUNTS_URL=$MUTED_ACCOUNTS_URL
    hostname: hivemind
    networks:
      - hivenet
    ports:
      - $HIVEMIND_PORT:8080
    depends_on:
      - postgres
    # loop workaround to avoid a race condition,
    # need postgres ready to receive connections before hivemind starts
    command: > 
      bash -c "
        sleep 5
        while ! pg_isready -d $POSTGRES_DB -U $POSTGRES_USER -h postgres | grep 'accepting connections' \
              || ping -c1 $POSTGRES_INIT_CONTAINER &>/dev/null
        do
          echo -e \"\e[0;35mWaiting for $POSTGRES_CONTAINER to start\e[0m\"
          sleep 5
        done
        /usr/local/bin/entrypoint.sh
      "
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "1"
    restart: always
  jussi:
     image: $JUSSI_IMAGE
     container_name: $JUSSI_CONTAINER
     environment:
       - TZ=$TIMEZONE
       - JUSSI_UPSTREAM_CONFIG_FILE=/app/config.json
       - JUSSI_ACCOUNT_TRANSFER_STEEMD_URL=$JUSSI_ACCOUNT_TRANSFER_STEEMD_URL
     volumes:
        - ./DEV_config.json:/app/config.json
     hostname: jussi
     networks:
       - hivenet
     ports:
       - $JUSSI_PORT:8080
     logging:
       driver: "json-file"
       options:
         max-size: "1G"
         max-file: "1"
     restart: always
networks:
  hivenet:
    name: hivenet
